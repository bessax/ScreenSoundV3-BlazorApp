@page "/artistas/manter"
@inject ArtistaAPI artistasAPI
@inject NavigationManager Navigation

<br />
<MudButton Variant="Variant.Filled" @onclick="@AdicionarArtista"
           Color="Color.Primary">
    Adicionar
</MudButton>
<br />
<MudGrid>
    <MudItem xs="8">
        <MudTable Items="@Artistas">
            <ToolBarContent>
                <MudText Typo="Typo.h6"><b>Manutenção de Artistas</b></MudText>
            </ToolBarContent>

            <HeaderContent>
                <MudTh><b>Nome Artista/Banda</b></MudTh>
                <MudTh><b>Biografia</b></MudTh>
                <MudTh><b>Excluir</b></MudTh>
                <MudTh><b>Editar</b></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="nome">@context.Nome</MudTd>
                <MudTd DataLabel="bio">@context.Bio</MudTd>
                <MudTd DataLabel="del">
                    <MudNavLink Href="/artistas/manter" Match="NavLinkMatch.All">
                        <MudIcon Icon=@Icons.Material.Filled.Delete Color="Color.Primary" />
                    </MudNavLink>

                </MudTd>
                <MudTd DataLabel="upd">
                    <MudNavLink Href="/artistas/manter" Match="NavLinkMatch.All">
                        <MudIcon Icon=@Icons.Material.Filled.Update Color="Color.Primary" />
                    </MudNavLink>
                </MudTd>

            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[]{5, 10}" />
            </PagerContent>
        </MudTable>
    </MudItem>
</MudGrid>

@code {
    public List<Artista>? Artistas { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Artistas = await artistasAPI.GetArtistasAsync();
    }

    private void AdicionarArtista()
    {
        Navigation.NavigateTo("artistas/novo");
    }

}
