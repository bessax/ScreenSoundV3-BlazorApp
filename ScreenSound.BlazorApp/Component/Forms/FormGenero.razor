@inject NavigationManager navigationManager
@inject ILogger<FormGenero> Logger
@inject GeneroAPI generoAPI

<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm>
                <MudTextField T="string" Label="Nome" @bind-Value="Genero!.Nome" Required="true" RequiredError="Campo nome deve ser preenchido!" />
                <MudTextField T="string" Label="Descrição" @bind-Value="Genero.Descricao" Required="true" RequiredError="Campo Bio deve ser preenchido!" />

            </MudForm>
            
        </MudPaper>
        <MudPaper Class="pa-4 mt-4">
            <MudButton Variant="Variant.Filled" Color="Color.Info" @onclick="VoltarParaListagem">Voltar</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="CadastrarGenero">Gravar</MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    [Parameter]
    public Genero? Genero { get; set; }
    private void VoltarParaListagem()
    {
        navigationManager.NavigateTo("/");
    }

    private async Task CadastrarGenero()
    {
        try
        {
            if (string.IsNullOrEmpty(Genero!.Nome))
            {
                return;
            }
            await generoAPI.AddGeneroAsync(Genero!);
            Logger.LogInformation("Dados cadastrados com sucesso");
            Thread.Sleep(2000);
            navigationManager.NavigateTo("/");
        }
        catch (Exception)
        {
            Logger.LogInformation("Erro ao cadastrar Gênero!");
        }

    }
 }
